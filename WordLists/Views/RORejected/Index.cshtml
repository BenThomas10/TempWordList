@model IEnumerable<WordLists.Models.RejectedWord>

@{
    ViewBag.Title = "Rejected Words";
}


@using (Html.BeginForm())
{
    if (!ViewBag.DisableDD)
    {
        <div>
            <h5>@Html.Label((string)ViewBag.RO_Client)&nbsp;-&nbsp;@Html.Label((string)ViewBag.RO_List)</h5> 
            @Html.DropDownList("LengthFilter", (SelectList)ViewBag.WordLengths, "- All Lengths -", new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;" })&nbsp;|&nbsp;@Html.ActionLink("Back to Lists", "Index", "ROLists")
        </div>
        <p> </p>
        <div hidden="hidden">
            @Html.DropDownList("ClientFilter", (SelectList)ViewBag.ClientList, (string)ViewBag.DefaultClientName, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @hidden = "hidden" }) @Html.DropDownList("VersionFilter", (SelectList)ViewBag.VersionList, (String)ViewBag.DefaultListNameRejected, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @hidden = "hidden" })
        </div>
    }
    else
    {
        <div>
            <h5>@Html.Label((string)ViewBag.RO_Client)&nbsp;-&nbsp;@Html.Label((string)ViewBag.RO_List)</h5>
            Rejected Words Archive | @Html.ActionLink("Back to Lists", "Index", "ROLists")
            @Html.DropDownList("LengthFilter", (SelectList)ViewBag.WordLengths, "- All Lengths -", new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @hidden = "hidden" })
        </div>
        <p> </p>
        <div hidden="hidden">
            @Html.DropDownList("ClientFilter", (SelectList)ViewBag.ClientList, (string)ViewBag.DefaultClientName, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @hidden = "hidden" }) @Html.DropDownList("VersionFilter", (SelectList)ViewBag.VersionList, (String)ViewBag.DefaultListNameRejected, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @hidden = "hidden" })
        </div>

        @*<div hidden="hidden">
            @Html.DropDownList("ClientFilter", (SelectList)ViewBag.ClientList, (string)ViewBag.DefaultClientNameRejected, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @disabled = "disabled" })    @Html.DropDownList("VersionFilter", (SelectList)ViewBag.VersionList, (String)ViewBag.DefaultListNameRejected, new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @disabled = "disabled" }) @Html.DropDownList("LengthFilter", (SelectList)ViewBag.WordLengths, "- All Lengths -", new { onchange = "this.form.submit();", @class = "form-control-sm", @style = "display:inline;", @disabled = "disabled" })&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.ActionLink("Back to Lists", "Index", "ListNames")
        </div>*@
        
    }
}
    @*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@if (ViewBag.CanEdit)
{
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Rejected Words", "Index", new { sortOrder = ViewBag.WordSort }) @ViewBag.wordCount
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                @if (!ViewBag.DisableDD)
                {
                    <td>
                        @item.Word
                    </td>
                }
                else
                {
                    <td>
                        @Html.LabelForModel(item.Word, new { style = "color:orange;" })
                    </td>
                }
            </tr>
        }

    </table>
}