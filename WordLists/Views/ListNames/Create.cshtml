@model WordLists.Models.ListName

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () { });
        function showDiag()
        {
            openModel.hidden = false;
        }
            </script>
}
@*

@{
    ViewBag.Title = "Create";
}

<h2>Create List</h2>*@


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create List</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClientId, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientId", (SelectList)ViewBag.ClientList, "- Client -", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.listName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.listName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.listName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsRejected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRejected)
                    @Html.ValidationMessageFor(model => model.IsRejected, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Words", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.TextArea("Word", new { @class = "form-control", @rows = 10, @cols = 5 })
                @Html.ValidationMessage("Word", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.Archive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" >
                <div class="checkbox" >
                    @Html.EditorFor(model => model.Archive)
                    @Html.ValidationMessageFor(model => model.Archive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="showDiag()" /> | @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>

    <div class="text-danger">
        @ViewBag.Warning
    </div>

    <div id="openModel" class="text-danger" hidden="hidden">
        &nbsp;&nbsp;&nbsp;&nbsp; Working. Please wait...
    </div>
}


@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
